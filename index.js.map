{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["// TASK 1\n\n// Якщо імейл і пароль користувача збігаються, зберігайте дані з форми при сабмите\n// у локальне сховище і змінюй кнопку login на logout і роби поля введення\n// Недоступними зміни.\n\n// При перезавантаженні сторінки, якщо користувач залогінений, ми маємо бачити logout-кнопку\n// та недоступні для зміни поля з даними користувача.\n// Клік по кнопці logout повертає все до початкового вигляду і видаляє дані користувача\n// З локального сховища.\n// Якщо введені дані не збігаються з потрібними даними, викликати аlert і\n// повідомляти про помилку.\n\nconst USER_DATA = {\n    email: 'user@mail.com',\n    password: 'secret',\n};\n\nconst loginForm = document.querySelector(\".login-form\");\nconst emailInput = document.querySelector('[name=\"email\"]');\nconst passwordInput = document.querySelector('[name=\"password\"]')\nconst btnInput = document.querySelector(\".login-form button\")\n\nloginForm.addEventListener(\"submit\", handleLogin)\nconst KEY_LOGIN = \"user-data\"\n\nfunction handleLogin(event) {\n    event.preventDefault();\n    if( btnInput.textContent === \"Logout\"){\n    localStorage.removeItem(KEY_LOGIN);\n    loginForm.reset();\n    emailInput.removeAttribute(\"readonly\");\n    passwordInput.removeAttribute(\"readonly\");\n    btnInput.textContent = \"Login\";\n    return;\n    }\n    const emailValue = emailInput.value.trim()\n    const passwordValue = passwordInput.value.trim()\n    if (emailValue === \"\" || passwordValue === \"\") {\n        alert(\"Fill all fields\")\n        return;\n    }\n    if (emailValue !== USER_DATA.email || passwordValue !== USER_DATA.password) {\n        alert(\"Incorrect data\")\n        return;\n    }\n\n    localStorage.setItem(KEY_LOGIN, JSON.stringify({ email: emailValue, password: passwordValue }))\n    btnInput.textContent = \"Logout\"\n    emailInput.setAttribute(\"readonly\", true);\n    passwordInput.setAttribute(\"readonly\", true);\n\n}\nconst savedData = localStorage.getItem(KEY_LOGIN);\nif(savedData) {\n   const parsedData = JSON.parse(savedData);\n   emailInput.value = parsedData.email ?? \"\";\n   passwordInput.value = parsedData.password ?? \"\";\n   btnInput.textContent = \"Logout\"\n    emailInput.setAttribute(\"readonly\", true);\n    passwordInput.setAttribute(\"readonly\", true);\n}"],"names":["USER_DATA","loginForm","emailInput","passwordInput","btnInput","handleLogin","KEY_LOGIN","event","emailValue","passwordValue","savedData","parsedData"],"mappings":"ssBAaA,MAAMA,EAAY,CACd,MAAO,gBACP,SAAU,QACd,EAEMC,EAAY,SAAS,cAAc,aAAa,EAChDC,EAAa,SAAS,cAAc,gBAAgB,EACpDC,EAAgB,SAAS,cAAc,mBAAmB,EAC1DC,EAAW,SAAS,cAAc,oBAAoB,EAE5DH,EAAU,iBAAiB,SAAUI,CAAW,EAChD,MAAMC,EAAY,YAElB,SAASD,EAAYE,EAAO,CAExB,GADAA,EAAM,eAAc,EAChBH,EAAS,cAAgB,SAAS,CACtC,aAAa,WAAWE,CAAS,EACjCL,EAAU,MAAK,EACfC,EAAW,gBAAgB,UAAU,EACrCC,EAAc,gBAAgB,UAAU,EACxCC,EAAS,YAAc,QACvB,MACC,CACD,MAAMI,EAAaN,EAAW,MAAM,KAAM,EACpCO,EAAgBN,EAAc,MAAM,KAAM,EAChD,GAAIK,IAAe,IAAMC,IAAkB,GAAI,CAC3C,MAAM,iBAAiB,EACvB,MACH,CACD,GAAID,IAAeR,EAAU,OAASS,IAAkBT,EAAU,SAAU,CACxE,MAAM,gBAAgB,EACtB,MACH,CAED,aAAa,QAAQM,EAAW,KAAK,UAAU,CAAE,MAAOE,EAAY,SAAUC,CAAa,CAAE,CAAC,EAC9FL,EAAS,YAAc,SACvBF,EAAW,aAAa,WAAY,EAAI,EACxCC,EAAc,aAAa,WAAY,EAAI,CAE/C,CACA,MAAMO,EAAY,aAAa,QAAQJ,CAAS,EAChD,GAAGI,EAAW,CACX,MAAMC,EAAa,KAAK,MAAMD,CAAS,EACvCR,EAAW,MAAQS,EAAW,OAAS,GACvCR,EAAc,MAAQQ,EAAW,UAAY,GAC7CP,EAAS,YAAc,SACtBF,EAAW,aAAa,WAAY,EAAI,EACxCC,EAAc,aAAa,WAAY,EAAI,CAC/C"}