{"version":3,"file":"index.js","sources":["../src/main.js"],"sourcesContent":["// TASK 1\n\n// Якщо імейл і пароль користувача збігаються, зберігайте дані з форми при сабмите\n// у локальне сховище і змінюй кнопку login на logout і роби поля введення\n// Недоступними зміни.\n\n// При перезавантаженні сторінки, якщо користувач залогінений, ми маємо бачити logout-кнопку\n// та недоступні для зміни поля з даними користувача.\n// Клік по кнопці logout повертає все до початкового вигляду і видаляє дані користувача\n// З локального сховища.\n// Якщо введені дані не збігаються з потрібними даними, викликати аlert і\n// повідомляти про помилку.\n\nconst USER_DATA = {\n  email: 'user@mail.com',\n  password: 'secret',\n};\n\nconst loginForm = document.querySelector('.login-form');\nconst emailInput = document.querySelector('[name=\"email\"]');\nconst passwordInput = document.querySelector('[name=\"password\"]');\nconst btnInput = document.querySelector('.login-form button');\n\n// loginForm.addEventListener('submit', handleLogin);\n// const KEY_LOGIN = 'user-data';\n\n// const savedData = localStorage.getItem(KEY_LOGIN);\n// if (savedData) {\n//   const parsedData = JSON.parse(savedData);\n//   emailInput.value = parsedData.email ?? '';\n//   passwordInput.value = parsedData.password ?? '';\n//   btnInput.textContent = 'Logout';\n//   emailInput.setAttribute('readonly', true);\n//   passwordInput.setAttribute('readonly', true);\n// }\n\n// function handleLogin(event) {\n//   event.preventDefault();\n//   if (btnInput.textContent === 'Logout') {\n//     localStorage.removeItem(KEY_LOGIN);\n//     loginForm.reset();\n//     emailInput.removeAttribute('readonly');\n//     passwordInput.removeAttribute('readonly');\n//     btnInput.textContent = 'Login';\n//     return;\n//   }\n//   const emailValue = emailInput.value.trim();\n//   const passwordValue = passwordInput.value.trim();\n//   if (emailValue === '' || passwordValue === '') {\n//     alert('Fill all fields');\n//     return;\n//   }\n//   if (emailValue !== USER_DATA.email || passwordValue !== USER_DATA.password) {\n//     alert('Incorrect data');\n//     return;\n//   }\n\n//   localStorage.setItem(\n//     KEY_LOGIN,\n//     JSON.stringify({ email: emailValue, password: passwordValue })\n//   );\n//   btnInput.textContent = 'Logout';\n//   emailInput.setAttribute('readonly', true);\n//   passwordInput.setAttribute('readonly', true);\n// }\n\n// TASK 2\n// Створіть функцію countdown(seconds), яка приймає кількість секунд і повертає проміс.\n// Проміс виконується після того, як пройде зазначений час. Функція має виводити у консоль кожну секунду до завершення.\n// countdown(5).then(res => console.log(res));\n// 4...\n// 3...\n// 2...\n// 1...\n\n// Час вийшов!\n// function countdown(seconds) {\n//   let count = seconds - 1;\n\n//   const interval = setInterval(() => {\n//     console.log(`${count}...`);\n//     count -= 1;\n//     if (count === 0) clearInterval(interval);\n//   }, 1000);\n\n//   return new Promise(resolve => {\n//     setTimeout(() => {\n//       resolve('Час вийшов');\n//     }, seconds * 1000);\n//   });\n// }\n// ????\n// function countdown(seconds) {\n//   return new Promise(resolve => {\n//     const interval = setInterval(() => {\n//       console.log(`${seconds - 1}...`);\n//       seconds--;\n//       if (seconds === 0) {\n//         clearInterval(interval);\n//         resolve('Час вийшов');\n//       }\n//     }, 1000);\n//   });\n// }\n// countdown(5).then(res => console.log(res));\n\n\n\n// - Використовуй prompt та повертай значення звідти.\n// - Створи функцію, яка буде набувати значення з prompt і повертатиме проміс.\n// Якщо значення не є числом, відхиляй проміс та логіруй \"error\".\n// Якщо значення парне, вирішуй проміс та повертай \"even\" через 1 секунду.\n// Якщо значення не парне, вирішуй проміс та повертай \"odd\" через 2 секунди.\n\nconst promptValue = +prompt('Enter something');\nfunction checkValue (promptValue) {\n    return new Promise ((resolve, reject) => {\nif(isNaN(promptValue)) {\nreject('error')\n}\nif(promptValue % 2 === 0) {\n  setTimeout(() => resolve('even'), 1000)\n} \nif(promptValue % 2 !== 0) {\n    setTimeout(() => resolve('odd'), 2000)\n}\n    })\n}\n\ncheckValue(promptValue) \n.then(value => console.log(value))\n.catch(error => console.log(error))\n"],"names":["promptValue","checkValue","resolve","reject","value","error"],"mappings":"ssBAkBkB,SAAS,cAAc,aAAa,EACnC,SAAS,cAAc,gBAAgB,EACpC,SAAS,cAAc,mBAAmB,EAC/C,SAAS,cAAc,oBAAoB,EA6F5D,MAAMA,EAAc,CAAC,OAAO,iBAAiB,EAC7C,SAASC,EAAYD,EAAa,CAC9B,OAAO,IAAI,QAAS,CAACE,EAASC,IAAW,CAC1C,MAAMH,CAAW,GACpBG,EAAO,OAAO,EAEXH,EAAc,IAAM,GACrB,WAAW,IAAME,EAAQ,MAAM,EAAG,GAAI,EAErCF,EAAc,IAAM,GACnB,WAAW,IAAME,EAAQ,KAAK,EAAG,GAAI,CAEzC,CAAK,CACL,CAEAD,EAAWD,CAAW,EACrB,KAAKI,GAAS,QAAQ,IAAIA,CAAK,CAAC,EAChC,MAAMC,GAAS,QAAQ,IAAIA,CAAK,CAAC"}